version: '3.7'
services:
  db:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      POSTGRES_DB: ${POSTGRES_DB} 
      PGDATA: /data/postgres

    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backendnetwork
    restart: unless-stopped

  django:
    container_name: django_container
    build: 
      context: ./lib_catalog
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
#    command: sh -c "python3 manage.py runserver 0.0.0.0:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    networks:
      - backendnetwork
    restart: unless-stopped      
    depends_on: 
      - db

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    networks:
      - frontendnetwork
    restart: unless-stopped
    depends_on:
      - db
    
volumes:
    postgres:
networks:
  frontendnetwork:
    driver: bridge
  backendnetwork:
    driver: bridge
